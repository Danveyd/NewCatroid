Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is Clang using "--version" did not match "(clang version)":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is AppleClang using "--version" did not match "(Apple LLVM version)":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is ARMClang using "--version" did not match "armclang":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is IntelLLVM using "--version" did not match "(Intel[^
]+oneAPI)":
yasm 1.3.0
Compiled on Oct  5 2023.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
yasm: warning: unrecognized option `-qversion'
yasm: No input files specified
Checking whether the ASM_NASM compiler is MSVC using "-?" did not match "Microsoft":
yasm: warning: unrecognized option `-?'
yasm: No input files specified
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
usage: yasm [option]* file
Options:
    --version               show version text
    --license               show license text
    -h, --help              show help text
    --arch=<arch>           select architecture (list with -a help)
     -a <arch>
    --parser=<parser>       select parser (list with -p help)
     -p <parser>
    --preproc=<preproc>     select preprocessor (list with -r help)
     -r <preproc>
    --oformat=<format>      select object format (list with -f help)
     -f <format>
    --dformat=<debug>       select debugging format (list with -g help)
     -g <debug>
    --lformat=<list>        select list format (list with -L help)
     -L <list>
    --list=<listfile>       name of list-file output
     -l <listfile>
    --objfile=<filename>    name of object-file output
     -o <filename>
    --mapfile=<filename>    name of map-file output
    --machine=<machine>     select machine (list with -m help)
     -m <machine>
    --force-strict          treat all sized operands as if `strict' was used
    -w                      inhibits warning messages
    -W                      enables/disables warning
    -M                      generate Makefile dependencies on stdout
    -E <file>               redirect error messages to file
    -s                      redirect error messages to stdout
    -e, --preproc-only      preprocess only (writes output to stdout by default)
    -i <path>               add include path
    -I <path>               add include path
    -P <filename>           pre-include file
    -d <macro[=value]>      pre-define a macro, optionally to value
    -D <macro[=value]>      pre-define a macro, optionally to value
    -u <macro>              undefine a macro
    -U <macro>              undefine a macro
    -X <style>              select error/warning message style (`gnu' or `vc')
    --prefix=<prefix>       prepend argument to name of all external symbols
    --suffix=<suffix>       append argument to name of all external symbols
    --postfix=<suffix>      append argument to name of all external symbols

Files are asm sources to be assembled.

Sample invocation:
   yasm -f elf -o object.o source.asm

Report bugs to bug-yasm@tortall.net
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
yasm: No input files specified
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
yasm: No input files specified
Checking whether the ASM_NASM compiler is NASM using "-v" did not match "(NASM version)":
yasm: warning: unrecognized option `-v'
yasm: No input files specified
Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_35510 && [1/2] Building C object CMakeFiles/cmTC_35510.dir/src.c.o
FAILED: CMakeFiles/cmTC_35510.dir/src.c.o 
D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot -DCMAKE_HAVE_LIBC_PTHREAD  -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -fPIE -MD -MT CMakeFiles/cmTC_35510.dir/src.c.o -MF CMakeFiles\cmTC_35510.dir\src.c.o.d -o CMakeFiles/cmTC_35510.dir/src.c.o -c D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/src.c
D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/src.c:13:3: error: call to undeclared function 'pthread_cancel'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
  pthread_cancel(thread);
  ^
D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/src.c:13:3: note: did you mean 'pthread_once'?
D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/pthread.h:258:5: note: 'pthread_once' declared here
int pthread_once(pthread_once_t* _Nonnull __once, void (* _Nonnull __init_routine)(void));
    ^
1 error generated.
ninja: build stopped: subcommand failed.


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_e5922 && [1/2] Building C object CMakeFiles/cmTC_e5922.dir/CheckFunctionExists.c.o
[2/2] Linking C executable cmTC_e5922
FAILED: cmTC_e5922 
cmd.exe /C "cd . && D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security  -DCHECK_FUNCTION_EXISTS=pthread_create -static-libstdc++ -Wl,--build-id=sha1 -Wl,--no-rosegment -Wl,--no-undefined-version -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments CMakeFiles/cmTC_e5922.dir/CheckFunctionExists.c.o -o cmTC_e5922  -lpthreads  -latomic -lm && cd ."
ld.lld: error: unable to find library -lpthreads
clang: error: linker command failed with exit code 1 (use -v to see invocation)
ninja: build stopped: subcommand failed.



Determining if the function pthread_create exists in the pthread failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_2751a && [1/2] Building C object CMakeFiles/cmTC_2751a.dir/CheckFunctionExists.c.o
[2/2] Linking C executable cmTC_2751a
FAILED: cmTC_2751a 
cmd.exe /C "cd . && D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security  -DCHECK_FUNCTION_EXISTS=pthread_create -static-libstdc++ -Wl,--build-id=sha1 -Wl,--no-rosegment -Wl,--no-undefined-version -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments CMakeFiles/cmTC_2751a.dir/CheckFunctionExists.c.o -o cmTC_2751a  -lpthread  -latomic -lm && cd ."
ld.lld: error: unable to find library -lpthread
clang: error: linker command failed with exit code 1 (use -v to see invocation)
ninja: build stopped: subcommand failed.



Determining if the include file vfork.h exists failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_8429e && [1/2] Building C object CMakeFiles/cmTC_8429e.dir/CheckIncludeFile.c.o
FAILED: CMakeFiles/cmTC_8429e.dir/CheckIncludeFile.c.o 
D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot   -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -fPIE -MD -MT CMakeFiles/cmTC_8429e.dir/CheckIncludeFile.c.o -MF CMakeFiles\cmTC_8429e.dir\CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_8429e.dir/CheckIncludeFile.c.o -c D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckIncludeFile.c
D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'vfork.h' file not found
#include <vfork.h>
         ^~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.



Determining if the include file ws2tcpip.h exists failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_7723a && [1/2] Building C object CMakeFiles/cmTC_7723a.dir/CheckIncludeFile.c.o
FAILED: CMakeFiles/cmTC_7723a.dir/CheckIncludeFile.c.o 
D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot   -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -fPIE -MD -MT CMakeFiles/cmTC_7723a.dir/CheckIncludeFile.c.o -MF CMakeFiles\cmTC_7723a.dir\CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_7723a.dir/CheckIncludeFile.c.o -c D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckIncludeFile.c
D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'ws2tcpip.h' file not found
#include <ws2tcpip.h>
         ^~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.



Determining if the function ftime exists failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_a7c8e && [1/2] Building C object CMakeFiles/cmTC_a7c8e.dir/CheckFunctionExists.c.o
[2/2] Linking C executable cmTC_a7c8e
FAILED: cmTC_a7c8e 
cmd.exe /C "cd . && D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security  -DCHECK_FUNCTION_EXISTS=ftime -static-libstdc++ -Wl,--build-id=sha1 -Wl,--no-rosegment -Wl,--no-undefined-version -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments CMakeFiles/cmTC_a7c8e.dir/CheckFunctionExists.c.o -o cmTC_a7c8e  -latomic -lm && cd ."
ld.lld: error: undefined symbol: ftime
>>> referenced by CheckFunctionExists.c:17 (D:/AppData/Local/Android/Sdk/cmake/3.22.1/share/cmake-3.22/Modules/CheckFunctionExists.c:17)
>>>               CMakeFiles/cmTC_a7c8e.dir/CheckFunctionExists.c.o:(main)
>>> did you mean: ctime
>>> defined in: D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/x86_64-linux-android/24/libc.so
clang: error: linker command failed with exit code 1 (use -v to see invocation)
ninja: build stopped: subcommand failed.



Determining if the OSSwapHostToBigInt64 exist failed with the following output:
Change Dir: D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp

Run Build Command(s):D:\AppData\Local\Android\Sdk\cmake\3.22.1\bin\ninja.exe cmTC_bf687 && [1/2] Building C object CMakeFiles/cmTC_bf687.dir/CheckSymbolExists.c.o
FAILED: CMakeFiles/cmTC_bf687.dir/CheckSymbolExists.c.o 
D:\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=x86_64-none-linux-android24 --sysroot=D:/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot   -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -fPIE -MD -MT CMakeFiles/cmTC_bf687.dir/CheckSymbolExists.c.o -MF CMakeFiles\cmTC_bf687.dir\CheckSymbolExists.c.o.d -o CMakeFiles/cmTC_bf687.dir/CheckSymbolExists.c.o -c D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckSymbolExists.c
D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckSymbolExists.c:2:10: fatal error: 'libkern/OSByteOrder.h' file not found
#include <libkern/OSByteOrder.h>
         ^~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.


File D:/Catroid-develop/vncclient/.cxx/RelWithDebInfo/2x2y591c/x86_64/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <libkern/OSByteOrder.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef OSSwapHostToBigInt64
  return ((int*)(&OSSwapHostToBigInt64))[argc];
#else
  (void)argc;
  return 0;
#endif
}
